// {
//   // 1. Console log
//   "Console Log": {
//     "prefix": "js:log",
//     "body": ["console.log($1);"],
//     "description": "In ra console"
//   },

//   // 2. Hàm thường
//   "Function": {
//     "prefix": "js:fn",
//     "body": ["function ${1:myFunction}(${2:params}) {", "  $3", "}"],
//     "description": "Tạo function"
//   },

//   // 3. Arrow function
//   "Arrow Function": {
//     "prefix": "js:afn",
//     "body": ["const ${1:myFunction} = (${2:params}) => {", "  $3", "};"],
//     "description": "Tạo arrow function"
//   },

//   // 4. Template literal
//   "Template Literal": {
//     "prefix": "js:tpl",
//     "body": ["`${1:text} ${2:variable}`"],
//     "description": "Template literal"
//   },

//   // 5. If statement
//   "If Statement": {
//     "prefix": "js:if",
//     "body": ["if (${1:condition}) {", "  $2", "}"],
//     "description": "Cấu trúc if"
//   },

//   // 6. For loop
//   "For Loop": {
//     "prefix": "js:for",
//     "body": [
//       "for (let ${1:i} = 0; ${1:i} < ${2:array}.length; ${1:i}++) {",
//       "  $3",
//       "}"
//     ],
//     "description": "Vòng lặp for"
//   },

//   // 7. ForEach loop
//   "ForEach Loop": {
//     "prefix": "js:foreach",
//     "body": ["${1:array}.forEach((${2:item}) => {", "  $3", "});"],
//     "description": "Duyệt mảng với forEach"
//   },

//   // 8. Map loop
//   "Map Loop": {
//     "prefix": "js:map",
//     "body": [
//       "const ${1:newArray} = ${2:array}.map((${3:item}) => {",
//       "  return $4;",
//       "});"
//     ],
//     "description": "Tạo mảng mới với map"
//   },

//   // 9. Fetch API
//   "Fetch API": {
//     "prefix": "js:fetch",
//     "body": [
//       "fetch('${1:url}')",
//       "  .then(response => response.json())",
//       "  .then(data => {",
//       "    console.log(data);",
//       "  })",
//       "  .catch(error => console.error(error));"
//     ],
//     "description": "Gọi API với Fetch"
//   },

//   // 10. DOM getElementById
//   "DOM Get Element": {
//     "prefix": "js:getid",
//     "body": ["document.getElementById('${1:id}')"],
//     "description": "Lấy element bằng ID"
//   }
// }

{
  "Console Log": {
    "prefix": "js:log",
    "body": ["console.log($1);"],
    "description": "In ra console"
  },
  "JavaScript Function": {
    "prefix": "js:function",
    "body": [
      "function ${1:functionName}(${2:params}) {",
      "  ${3:// code here}",
      "}"
    ]
  },
  "JavaScript Arrow Function": {
    "prefix": "js:arrow",
    "body": [
      "const ${1:functionName} = (${2:params}) => {",
      "  ${3:// code here}",
      "};"
    ]
  },
  "JavaScript Object": {
    "prefix": "js:object",
    "body": [
      "const ${1:objectName} = {",
      "  ${2:key1}: ${3:value1},",
      "  ${4:key2}: ${5:value2},",
      "  ${6:key3}: ${7:value3},",
      "};"
    ]
  },
  "JavaScript array": {
    "prefix": "js:array",
    "body": [
      "const ${1:fruits} = [",
      "  \"${2:Apple}\",",
      "  \"${3:Banana}\",",
      "  \"${4:Orange}\"",
      "];"
    ]
  },
  "js array object": {
    "prefix": "js:array-object",
    "body": [
      "const ${1:arrayName} = [",
      "  {",
      "    ${2:key1}: ${3:value1},",
      "    ${4:key2}: ${5:value2},",
      "    ${6:key3}: ${7:value3},",
      "  },",
      "  {",
      "    ${8:key1}: ${9:value1},",
      "    ${10:key2}: ${11:value2},",
      "    ${12:key3}: ${13:value3},",
      "  },",
      "  // ...",
      "];"
    ]
  },
  "Array Methods": {
    "prefix": "js:arraymethods",
    "body": [
      "const numbers = [1, 2, 3, 4, 5];",
      "",
      "// Nhân đôi mỗi phần tử",
      "numbers.map(n => n * 2); // [2, 4, 6, 8, 10]",
      "",
      "// Lọc số > 2",
      "numbers.filter(n => n > 2); // [3, 4, 5]",
      "",
      "// Tìm số 3",
      "numbers.find(n => n === 3); // 3",
      "",
      "// In từng số",
      "numbers.forEach(n => console.log(n));",
      "",
      "// Tính tổng",
      "numbers.reduce((acc, n) => acc + n, 0); // tổng"
    ],
    "description": "Array Methods cơ bản"
  },
  "js:destructuring": {
    "prefix": "js:destructuring",
    "body": [
      "const user = { name: \"Trung\", age: 30 };",
      "const { name, age } = user;",
      "",
      "const arr = [1, 2];",
      "const [a, b] = arr;"
    ],
    "description": "JavaScript destructuring example"
  },
  "template-literal": {
    "prefix": "js:template",
    "body": ["`Hello, ${1:name}`"]
  },
  "ternary-operator": {
    "prefix": "js:ternary",
    "body": ["${1:condition} ? ${2:valueIfTrue} : ${3:valueIfFalse}"]
  }
}
